version: '3'
services:

  ## Router mongos
  # unico punto di contatto per le applicazioni che necessitano di leggere o scrivere dati nel cluster frammentato. 
  # Le applicazioni interagiscono sempre con mongos.
  router01:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile                                  
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all --keyFile /data/mongodb-keyfile
    ports:
      - 27117:27017
    restart: always
    volumes:
      - ./scripts:/scripts                   
      - mongodb_cluster_router01_db:/data/db
      - mongodb_cluster_router01_config:/data/configdb

  ## Config Servers #1
  # Memorizzazione dei metadati: I processi del config server sono istanze di mongod che memorizzano i metadati del cluster.
  # Ogni config server conserva una copia completa dei metadati del cluster.
  # Garanzia di coerenza: A partire da MongoDB 3.2, i config server per i cluster frammentati possono essere distribuiti come un set di repliche (CSRS).
  # Un minimo di 3 server CSRS è consigliato per l’alta disponibilità in una distribuzione di produzione.
  configsvr01:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: configsvr01 
    command: mongod --port 27017 --configsvr --replSet rs-config-server --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts 
      - mongodb_cluster_configsvr01_db:/data/db
      - mongodb_cluster_configsvr01_config:/data/configdb
    ports:
      - 27119:27017
    restart: always
    links:
      - shard01-a
      - shard02-a
      - configsvr02
      - configsvr03

  ## Config Servers #2   
  configsvr02:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: configsvr02 
    command: mongod --port 27017 --configsvr --replSet rs-config-server --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_configsvr02_db:/data/db
      - mongodb_cluster_configsvr02_config:/data/configdb
    ports:
      - 27120:27017
    restart: always

  ## Config Servers #3 
  configsvr03:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: configsvr03
    command: mongod --port 27017 --configsvr --replSet rs-config-server --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_configsvr03_db:/data/db
      - mongodb_cluster_configsvr03_config:/data/configdb
    ports:
      - 27121:27017
    restart: always



  ## Shard 1A
  shard01-a:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile 
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01 --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_a_db:/data/db
      - mongodb_cluster_shard01_a_config:/data/configdb
    ports:
      - 27122:27017
    restart: always
    links:
      - shard01-b
      - shard01-c

  ## Shard 1B
  shard01-b:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01 --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_b_db:/data/db
      - mongodb_cluster_shard01_b_config:/data/configdb
    ports:
      - 27123:27017
    restart: always

  ## Shard 1C
  shard01-c:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01 --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_c_db:/data/db
      - mongodb_cluster_shard01_c_config:/data/configdb
    ports:
      - 27124:27017
    restart: always

  ## Shard 2A
  shard02-a:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02 --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_a_db:/data/db
      - mongodb_cluster_shard02_a_config:/data/configdb
    ports:
      - 27125:27017
    restart: always
    links:
      - shard02-b
      - shard02-c

  ## Shard 2B
  shard02-b:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02 --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_b_db:/data/db
      - mongodb_cluster_shard02_b_config:/data/configdb
    ports:
      - 27126:27017
    restart: always

  ## Shard 2C
  shard02-c:
    build: 
      context: mongodb-build
      dockerfile: Dockerfile
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02 --keyFile /data/mongodb-keyfile
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_c_db:/data/db
      - mongodb_cluster_shard02_c_config:/data/configdb
    ports:
      - 27127:27017
    restart: always

volumes:
  mongodb_cluster_router01_db:
  mongodb_cluster_router01_config:
  
  mongodb_cluster_router02_db:
  mongodb_cluster_router02_config:
  
  mongodb_cluster_configsvr01_db:
  mongodb_cluster_configsvr01_config:
  
  mongodb_cluster_configsvr02_db:
  mongodb_cluster_configsvr02_config:
  
  mongodb_cluster_configsvr03_db:
  mongodb_cluster_configsvr03_config:
  
  mongodb_cluster_shard01_a_db:
  mongodb_cluster_shard01_a_config:
  
  mongodb_cluster_shard01_b_db:
  mongodb_cluster_shard01_b_config:
  
  mongodb_cluster_shard01_c_db:
  mongodb_cluster_shard01_c_config:
  
  mongodb_cluster_shard02_a_db:
  mongodb_cluster_shard02_a_config:
  
  mongodb_cluster_shard02_b_db:
  mongodb_cluster_shard02_b_config:
  
  mongodb_cluster_shard02_c_db:
  mongodb_cluster_shard02_c_config: